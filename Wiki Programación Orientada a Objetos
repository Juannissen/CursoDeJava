1) ¿Qué es la programación orientada a objetos?

La Programación Orientada a Objetos (POO) es un paradigma de programación, es decir, un modelo o un estilo de programación que nos da unas guías sobre cómo trabajar
con él. Se basa en el concepto de clases y objetos. 
Este tipo de programación se utiliza para estructurar un programa de software en piezas simples y reutilizables de planos de código (clases) para crear instancias 
individuales de objetos.


2) ¿Cuáles son los pilares de la programación orientada a objetos?

La programación orientada a objetos incluye cuatro pilares principales:

1. Abstracción
La abstracción oculta al usuario la funcionalidad interna de una aplicación. El usuario puede ser el cliente final u otros desarrolladores.
Podemos encontrar abstracción en nuestra vida cotidiana. Por ejemplo, sabes cómo usar tu teléfono, pero probablemente no sepas exactamente lo que ocurre dentro de él 
cada vez que abres una aplicación.

2. Herencia
La herencia nos permite definir múltiples subclases a partir de una clase ya definida. El propósito principal es seguir el principio DRY. Podrás reutilizar mucho 
código implementando todos los componentes compartidos en superclases.

3. Polimorfismo
El polimorfismo nos permite modificar ligeramente los métodos y atributos de las subclases previamente definidas en la superclase.
El significado literal es «muchas formas«. Esto se debe a que construimos métodos con el mismo nombre pero con diferente funcionalidad.

4. Encapsulación
La encapsulación es el proceso en el que protegemos la integridad interna de los datos en una clase.
